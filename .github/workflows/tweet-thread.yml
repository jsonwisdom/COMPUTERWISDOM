name: Post Tweet Thread

on:
  push:
    paths:
      - "tweets/**"

jobs:
  tweet-thread:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install tweepy markdown

    - name: Parse and post tweet thread with image support
      env:
        TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
      run: |
        import os
        import tweepy
        import glob

        key = os.environ['TWITTER_API_KEY']
        secret = os.environ['TWITTER_API_SECRET']
        token = os.environ['TWITTER_ACCESS_TOKEN']
        token_secret = os.environ['TWITTER_ACCESS_SECRET']

        auth = tweepy.OAuth1UserHandler(key, secret, token, token_secret)
        api = tweepy.API(auth)

        md_files = sorted(glob.glob("tweets/*.md"), key=os.path.getmtime, reverse=True)
        if not md_files:
            print("No markdown files found.")
            exit(0)

        thread_file = md_files[0]
        with open(thread_file, "r") as f:
            lines = [line.strip() for line in f if line.strip() and not line.startswith("#")]

        image_files = sorted(glob.glob("tweets/*.[pj][pn]g"), key=os.path.getmtime, reverse=True)
        image_path = image_files[0] if image_files else None

        print(f"Tweet file: {thread_file}")
        print(f"Attached image: {image_path if image_path else 'None'}")

        if image_path:
            first_tweet = api.update_status_with_media(status=lines[0], filename=image_path)
        else:
            first_tweet = api.update_status(lines[0])

        reply_to = first_tweet.id
        for tweet in lines[1:]:
            reply_to = api.update_status(status=tweet, in_reply_to_status_id=reply_to, auto_populate_reply_metadata=True).id
